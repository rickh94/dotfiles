
# 2017-08-14 22:48:08.286577
+def main():
+    print('hi')

# 2017-08-14 22:48:22.114293
+main()

# 2017-08-14 22:48:44.029215
+quit

# 2017-08-15 23:07:24.419572
+import digitalocean

# 2017-08-15 23:13:07.756037
+from subprocess import run

# 2017-08-15 23:13:49.847742
+import subprocess

# 2017-08-15 23:14:35.858859
+get_token = subprocess.run(['pass', 'show', 'digitalocean/couperin-do-token'],
+                           stdout=subprocess.PIPE)

# 2017-08-15 23:14:42.309048
+get_token.stdout

# 2017-08-15 23:16:45.609030
+token_ = str(get_token.stdout).strip

# 2017-08-15 23:16:47.380230
+token_

# 2017-08-15 23:16:52.124313
+token_ = str(get_token.stdout).strip()

# 2017-08-15 23:16:53.973464
+token_

# 2017-08-15 23:17:39.319161
+token_ = token_.decode('UTF-8')

# 2017-08-15 23:18:07.395646
+my_token = get_token.stdout.decode('utf-8').strip()

# 2017-08-15 23:18:10.359987
+my_token

# 2017-08-15 23:19:33.869170
+droplet = digitalocean.Droplet(token=my_token,
+                               name='mytestdroplet',
+                               region='nyc3',
+                               image='ubuntu-14-04-x64',
+                               size_slug='512mb',
+                               )

# 2017-08-15 23:19:36.680554
+droplet.create

# 2017-08-15 23:19:41.364886
+droplet.create()

# 2017-08-15 23:19:55.924484
+actions = droplet.get_actions()

# 2017-08-15 23:20:47.617401
+for action in actions:
+    action.load()
+    print(action.status)

# 2017-08-15 23:21:30.483068
+manager = digitalocean.Manager(token=my_token)

# 2017-08-15 23:21:41.070800
+my_droplets = manager.get_all_droplets()

# 2017-08-15 23:21:47.664382
+print(my_droplets)

# 2017-08-15 23:22:49.894862
+droplet.destroy()

# 2017-08-15 23:22:53.385054
+my_droplets = manager.get_all_droplets()

# 2017-08-15 23:22:55.840695
+print(my_droplets)

# 2017-08-15 23:24:05.235238
+from digitalocean import SSHKey

# 2017-08-15 23:27:40.291855
+from crypto.PublicKey import RSA

# 2017-08-15 23:27:55.877221
+from Crypto.PublicKey import RSA

# 2017-08-15 23:30:23.994119
+import crypto

# 2017-08-15 23:30:31.550588
+crypto.PublicKey

# 2017-08-15 23:32:04.334171
+from Crypto.PublicKey import RSA

# 2017-08-15 23:32:08.868480
+import digitalocean

# 2017-08-15 23:32:25.439306
+key = RSA.generate(4096)

# 2017-08-15 23:32:27.292305
+key

# 2017-08-16 00:05:04.470745
+from Crypto.PublicKey import RSA

# 2017-08-16 00:06:29.081106
+key = RSA.generate(4096)

# 2017-08-16 00:06:30.265298
+key

# 2017-08-16 00:06:37.919392
+key.exportKey('PEM')

# 2017-08-16 00:07:11.594624
+with open('testkey', 'w') as f:
+    f.write(key.exportKey('PEM'))

# 2017-08-16 00:07:24.176351
+with open('testkey', 'wb') as f:
+    f.write(key.exportKey('PEM'))

# 2017-08-16 00:08:06.908418
+pubkey = key.publickey()

# 2017-08-16 00:08:11.669777
+pubkey

# 2017-08-16 00:08:23.206205
+print(pubkey.exportKey('OpenSSH'))

# 2017-08-16 00:08:42.575201
+pubkey.exportKey('OpenSSH')

# 2017-08-16 00:39:59.556944
+import os

# 2017-08-16 00:40:03.213381
+import digitalocean

# 2017-08-16 00:40:29.268633
+access_token = os.environ['DO_KEY']

# 2017-08-16 00:40:49.914126
+manager = digitalocean.Manager(token=access_token)

# 2017-08-16 00:41:21.241540
+keys = manager.get_all_sshkeys()

# 2017-08-16 00:41:23.156506
+keys
# 2017-08-15 02:47:36.672504
+from slackperson import SlackPerson

# 2017-08-15 02:48:50.760577
+test = SlackPerson('me', {'members': [ {'name': 'me', 'id': '1'}, {'name': 'notme', 'id': '2'} ] })

# 2017-08-15 02:48:54.571344
+test.name

# 2017-08-15 02:48:58.228561
+test.username

# 2017-08-15 02:49:01.598013
+test.userid

# 2017-08-15 02:49:13.392934
+test2 = SlackPerson('notme', {'members': [ {'name': 'me', 'id': '1'}, {'name': 'notme', 'id': '2'} ] })

# 2017-08-15 02:49:21.062884
+assert test2.userid == '2'

# 2017-08-15 02:49:34.537224
+assert test2.userid == '1'

# 2017-08-15 02:49:37.127780
+assert test2.userid == '2'

# 2017-08-15 02:49:43.774502
+assert test.userid =='1'

# 2017-08-15 02:50:13.312372
+from .slackperson import SlackPerson

# 2017-08-15 02:50:17.699962
+exit

# 2017-08-15 02:50:33.486604
+from .slackperson import SlackPerson

# 2017-08-15 02:50:49.125067
+from slackperson import SlackPerson

# 2017-08-15 02:51:39.449459
+import slackperson

# 2017-08-16 01:14:52.371391
+import digitalocean

# 2017-08-16 01:15:04.841407
+import os

# 2017-08-16 01:15:16.809737
+tok = os.environ['DO_API_TOKEN']

# 2017-08-16 01:15:18.659973
+tok

# 2017-08-16 01:15:30.683015
+man = digitalocean.Manager(token=tok)

# 2017-08-16 01:15:53.280884
+man.get_all_sshkeys()

# 2017-08-16 01:16:02.245085
+keys = man.get_all_sshkeys()

# 2017-08-16 01:16:04.922580
+keys[1]

# 2017-08-16 01:16:39.826347
+keys[1].__dict__

# 2017-08-16 01:16:52.367873
+keys[1].id

# 2017-08-16 01:17:30.784678
+for key in keys:
+    if key.name == 'fellow_keyboards_civilian_acre':
+        print(key.id)

# 2017-08-16 01:17:58.128884
+for key in keys:
+    if key.name == 'fellows_keyboards_civilian_acre':
+        print(key.id)

# 2017-08-16 01:27:23.427957
+import digitalocean

# 2017-08-16 01:27:36.993087
+import os

# 2017-08-16 01:27:47.881671
+tok = os.environ['DO_API_TOKEN']

# 2017-08-16 01:27:56.130306
+manger = digitalocean.Manager(token=tok)

# 2017-08-16 01:28:01.073845
+manager.get_all_droplets()

# 2017-08-16 01:28:07.358890
+manager = digitalocean.Manager(token=tok)

# 2017-08-16 01:28:09.721939
+manager.get_all_droplets()

# 2017-08-16 01:28:27.227550
+drops = manager.get_all_droplets()

# 2017-08-16 01:28:31.844606
+drops[1].__dict__

# 2017-08-16 01:28:42.538961
+drops[0].__dict__

# 2017-08-16 01:28:47.947648
+import json

# 2017-08-16 01:29:15.218076
+print(json.dumps(drops[0].__dict__, indent=4))

# 2017-08-16 01:29:24.901027
+drops[0].__dict__

# 2017-08-16 01:31:59.142366
+drops[0].name

# 2017-08-16 01:32:06.827682
+drops[0].networks

# 2017-08-16 01:32:15.323570
+drops[0].networks['v4']

# 2017-08-16 01:32:21.191987
+drops[0].networks['v4']['ip_address']

# 2017-08-16 01:32:28.639766
+drops[0].networks['v4'][0]['ip_address']

# 2017-08-16 01:33:16.249607
+for drop in drops:
+    if drop.name == 'testSSHdroplet':
+        print(drop.networks['v4'][0]['ip_address'])

# 2017-08-16 22:47:03.046854
+from subprocess import check_output

# 2017-08-16 22:47:24.948002
+check_output(['ssh-agent',name])

# 2017-08-16 22:47:38.886656
+check_output(['pidof','ssh-agent'])

# 2017-08-16 22:57:47.849114
+import digitalocean

# 2017-08-16 22:58:03.987428
+import os

# 2017-08-16 22:58:20.953876
+manager = digitalocean.manager(token=os.environ['DO_API_TOKEN'])

# 2017-08-16 22:58:28.433927
+manager = digitalocean.Manager(token=os.environ['DO_API_TOKEN'])

# 2017-08-16 22:58:34.398967
+manager.get_all_droplets

# 2017-08-16 22:58:43.283584
+drops = manager.get_all_droplets()

# 2017-08-16 22:58:44.761553
+drops

# 2017-08-16 22:58:54.183511
+drops[0].networks['v4']

# 2017-08-16 22:59:00.798776
+drops[0].networks['v4'][0]['ip_address']

# 2017-08-16 23:00:10.777807
+drop = digitalocean.Droplet(token=os.environt['DO_API_TOKEN'],
+                            name='testdrop',
+                            region='nyc3',
+                            image='ubuntu-16-04-x64',
+                            size_slug='512mb',
+                            backups=False,
+                            )

# 2017-08-16 23:00:21.825277
+drop = digitalocean.Droplet(token=os.environ['DO_API_TOKEN'],
+                            name='testdrop',
+                            region='nyc3',
+                            image='ubuntu-16-04-x64',
+                            size_slug='512mb',
+                            backups=False,
+                            )

# 2017-08-16 23:00:32.461929
+drop.create()

# 2017-08-16 23:00:41.693200
+drops=manager.get_all_droplets()

# 2017-08-16 23:01:08.376796
+for drop in drops:
+    if drop.name == 'testdrop':
+        print(drop.networks['v4'][0]['ip_address'])

# 2017-08-16 23:03:50.969397
+myvar = b'5'

# 2017-08-16 23:03:54.188345
+int(myvar)

# 2017-08-17 00:07:55.624203
+exit

# 2017-08-18 00:10:53.957024
+import test_dosockstunnel

# 2017-08-18 00:11:04.807728
+hi = test_dosockstunnel.FakeDroplet()

# 2017-08-18 00:11:23.016818
+import test_dosockstunnel

# 2017-08-18 00:11:24.325969
+hi = test_dosockstunnel.FakeDroplet()

# 2017-08-18 00:11:33.062658
+import test_dosockstunnel

# 2017-08-18 00:11:36.744778
+hi = test_dosockstunnel.FakeDroplet()

# 2017-08-18 00:11:54.978529
+import test_dosockstunnel

# 2017-08-18 00:11:55.945186
+hi = test_dosockstunnel.FakeDroplet()

# 2017-08-18 00:11:57.299402
+hi

# 2017-08-18 00:12:00.733710
+hi.networks

# 2017-08-18 00:12:20.697734
+hi.networks['v4'][0]['ip_address']
